# Generated by Django 2.1.4 on 2019-01-27 14:39

import apps.account.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.CharField(help_text='8桁の学籍番号を入力してください.', max_length=8, unique=True, verbose_name='学籍番号')),
                ('name', models.CharField(help_text='名前を入力してください.', max_length=100, verbose_name='名前')),
                ('phone_number', models.CharField(blank=True, help_text='電話番号を入力してください(半角数字のみ).', max_length=11, null=True, verbose_name='電話番号')),
                ('is_leader', models.BooleanField(default=False, verbose_name='局長/部門長')),
                ('is_subleader', models.BooleanField(default=False, verbose_name='副局長/副部門長')),
                ('is_staff', models.BooleanField(default=False, help_text='管理画面にアクセスすることができる.', verbose_name='スタッフ権限')),
                ('is_active', models.BooleanField(default=True, help_text='有効なユーザである.', verbose_name='有効なユーザ')),
                ('is_superuser', models.BooleanField(default=False, help_text='全ての権限を持っている.', verbose_name='スーパーユーザ権限')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', apps.account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Belong',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, verbose_name='局・部門')),
                ('short_name', models.CharField(max_length=30, verbose_name='局・部門(略称)')),
                ('color', models.CharField(default='black', max_length=30, verbose_name='局・部門カラー')),
                ('order', models.IntegerField(unique=True, verbose_name='優先順位')),
            ],
            options={
                'db_table': 'belongs',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, verbose_name='学科')),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, verbose_name='学年')),
                ('order', models.IntegerField(unique=True, verbose_name='優先順位')),
            ],
            options={
                'db_table': 'grades',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='belong',
            field=models.ForeignKey(help_text='所属している局・部門を選択してください.', on_delete=django.db.models.deletion.PROTECT, to='account.Belong'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(help_text='学科を選択してください.', on_delete=django.db.models.deletion.PROTECT, to='account.Department'),
        ),
        migrations.AddField(
            model_name='user',
            name='grade',
            field=models.ForeignKey(help_text='学年を選択してください.', on_delete=django.db.models.deletion.PROTECT, to='account.Grade'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]

# Generated by Django 2.1.4 on 2019-01-04 04:21

import apps.account.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.CharField(help_text='8桁の学籍番号を入力してください.', max_length=8, unique=True)),
                ('name', models.CharField(help_text='名前を入力してください.', max_length=100)),
                ('belong', models.CharField(help_text='所属している局・部門を選択してください.', max_length=30)),
                ('department', models.CharField(help_text='学科を選択してください.', max_length=30)),
                ('grade', models.CharField(help_text='学年を選択してください.', max_length=30)),
                ('phone_number', models.CharField(blank=True, help_text='電話番号を入力してください(半角数字のみ).', max_length=11, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='管理画面にアクセスできるかどうか.')),
                ('is_active', models.BooleanField(default=True, help_text='有効なユーザかどうか.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', apps.account.models.UserManager()),
            ],
        ),
    ]
